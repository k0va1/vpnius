---
- name: "Add the user '{{ user }}' and add it to 'sudo'"
  user:
    name: "{{ user }}"
    groups: sudo
    append: yes
    shell: "/bin/bash"
    create_home: true
    home: "/home/{{user}}"
  become: true

- name: Install aptitude
  apt:
    name: aptitude
    state: latest
    update_cache: true
  become: true

- name: Install required system packages
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python3-pip
      - virtualenv
      - python3-setuptools
      - gnupg2
    state: latest
    update_cache: true
  become: true

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  become: true

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable
    state: present
  become: true

- name: Update apt and install docker-ce
  apt:
    name: docker-ce
    state: latest
    update_cache: true
  become: true

- name: Install Docker Module for Python
  pip:
    name:
      - docker
      - docker-compose

- name: "Add remote '{{ user }}' user to 'docker' group"
  user:
    name: "{{ user }}"
    groups: "docker"
    append: yes
  tags:
    - docker
  become: true

- name: Install docker-compose
  get_url:
    url : https://github.com/docker/compose/releases/download/v2.15.1/docker-compose-linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: '0755'
  become: true

- name: "Create a {{services_folder}} if it does not exist"
  ansible.builtin.file:
    path: "{{services_folder}}"
    state: directory
    mode: '0755'

- name: "Template docker-compose.yml to {{services_folder}}"
  ansible.builtin.template:
    src: templates/docker-compose.yml.j2
    dest: "{{services_folder}}/docker-compose.yml"
    owner: "{{user}}"

- name: Allow Wireguard port
  community.general.ufw:
    rule: allow
    port: "{{wireguard_port}}"
    proto: udp

- name: Make sure a Docker service unit is running
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: true

- name: Docker compose up
  community.docker.docker_compose:
    project_src: "{{services_folder}}"
    state: present

- name: Find files to copy
  find:
    paths: "{{wireguard_config_folder}}"
    recurse: true
    patterns: "peer_*.conf,peer_*.png"
  register: files_to_copy

- name: Print
  ansible.builtin.debug:
    msg:
    - "Files {{files_to_copy}}"

- name: Copy files to local machine
  fetch:
    src: "{{ item.path }}"
    dest: "~"
    flat: yes
  with_items: "{{ files_to_copy.files }}"
